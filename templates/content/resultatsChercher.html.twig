{% extends 'base.html.twig' %}

{% block title %}Recherche d'itinéraires{{ parent() }}{% endblock %}

{% block stylesheets %}{{ asset('build/resultatsChercher.css') }}{% endblock %}

{% block body %}
    {% include 'flash_messages.html.twig' %}

    <h1 class="titre margin-left">Résultats de votre recherche d'itinéraires</h1>

    <div class="titre-separation margin-left"></div>

    <p class="resultatsNb margin-left">Il y a <span>{{ resultatPathNb }}</span> {% if resultatPathNb == 1 %}itinéraire{% else %}itinéraires{% endif %} correpondant à votre recherche</p>

    <div class="resultats-bigcontainer">
        <div class="resultats-container">
            {% set presDeId = 1 %}
            {% for path in resultatPath %}
                <a class="resultat-container" href="{{ path('itineraire', {'id': path.id}) }}">
                    <p class="resultat-titre">{{ path.titre }}</p>
                    <div class="resultat-titre-sepa"></div>
                    {% if path.typeSport != null %}
                    <p class="resultat-typeSport resultat-margin-left">
                        {% if path.typeSport == "marche" %}
                            <img src="{{ asset('images/chercher_typeSport3.png') }}"/>
                            Marche
                        {% elseif path.typeSport == "course" %}
                            <img src="{{ asset('images/chercher_typeSport2.png') }}"/>
                            Course à pied
                        {% elseif path.typeSport == "veloroute" %}
                            <img src="{{ asset('images/chercher_typeSport4.png') }}"/>
                            Vélo de route
                        {% elseif path.typeSport == "vtt" %}
                            <img src="{{ asset('images/chercher_typeSport5.png') }}"/>
                            VTT
                        {% elseif path.typeSport == "autre" %}
                            <img src="{{ asset('images/chercher_typeSport1.png') }}"/>
                            Autre
                        {% endif %}
                    </p>
                    {% endif %}
                    <p class="resultat-auteur resultat-margin-left">par <span>{{ path.auteur }}</span></p>
                    <p class="resultat-presDe resultat-margin-left">
                        près de <span id="resultat-presDe-span-{{ presDeId }}">{{ path.placeId }}</span>
                    </p>
                    {% set presDeId = presDeId + 1 %}
                    <p class="resultat-distance" title="ou {{ path.distance }} mètres"><span>{{ (path.distance / 1000)|round(2, 'floor') }}</span>km</p>
                </a>
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBxvWmkG3pYY6DaFxUzvRiyvttqYjdX15Q&libraries=places&callback=init" async defer></script>
    <script>
        function init(){
            var geocoder = new google.maps.Geocoder();

            for (i = 0; i < {{ resultatPathNb }}; i++){
                var idNb = i + 1;
                var idNb = idNb.toString();
                var placeIdElement = document.getElementById('resultat-presDe-span-' + idNb);
                var placeIdValue = placeIdElement.textContent;

                geocoder.geocode({'placeId': placeIdValue}, function(results, status) {
                    if (status !== 'OK') {
                        alert('Le Geocoder a echoué. Raison: ' + status);
                        return;
                    }
                    var geoLocationResult = results[0].formatted_address.substring(6 , results[0].formatted_address.length);
                    console.log(geoLocationResult);

                    //La fonction est asynchrone. Elle est executée après la boucle
                    //Ce console.log affiche pourtant bien tous les résultats
                });
            }
        }
    </script>
{% endblock %}