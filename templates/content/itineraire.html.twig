{% extends 'base.html.twig' %}

{% block title %}{{ path.titre }} par {{ path.auteur }}{{ parent() }}{% endblock %}

{% block stylesheets %}{{ asset('build/itineraire.css') }}{% endblock %}

{% block body %}
    <div id="loading">
        <img id="loading-image" src="{{ asset('images/loader.gif') }}" alt="Loading..." />
    </div>

    <div id="map" oncontextmenu="return false"></div>

    <div id="textDiv" class="textDivDisplay"></div>
    <div id="petitTextDiv"></div>

    <div id="mapFilter" class="mapFilter"></div>

    <button id="boutonMenuLateral" class="boutonMenuLateralStyle"><img src="{{ asset('images/menu-droite.png') }}" alt="Droite" id="imgBoutonMenuGauche"></button>
    <div id="menuGauche">
        <p id="menuGauche-message">Commencez par tracer votre parcours !</p>

        <div id="menuGauche-interieur">
            <div class="menuGauche-partie" id="temps-necessaire-container">
                <p class="menuGauche-partie-texte temps-necessaire-texte">Connaître le temps nécessaire pour parcourir votre<br/>itinéraire en donnant votre vitesse moyenne</p>
                <div class="temps-necessaire-formcontainer">
                    <input type="text" name="vitesse-moyenne" id="temps-necessaire-input"/>
                    <button type="submit" id="temps-necessaire-submit" class="menuGauche-btn-submit"><img src="{{ asset('images/fleche-tempsnecessaire.png') }}"></button>
                </div>
                <p class="temps-necessaire-soustexte">Rentrez votre vitesse moyenne en km/h</p>
            </div>
            <div class="menuGauche-partie" id="temps-necessaire-resultat-partie">
                <div class="temps-necessaire-resultat-container">
                    <p id="temps-necessaire-resultat">
                        Avec votre allure de
                        <span id="temps-necessaire-resultat-allure"></span>
                        km/h, <br/> vous prendrez
                        <span id="temps-necessaire-resultat-temps"></span>
                    </p>
                    <button id="temps-necessaire-resultat-btn">Calculer à nouveau</button>
                </div>
            </div>




            <div class="menuGauche-partie" id="vitesse-moyenne-container">
                <div class="sepa-container"><div class="menuGauche-sepa"></div></div>
                <div class="vitesse-moyenne-souscontainer">
                    <p class="menuGauche-partie-texte vitesse-moyenne-texte">Calculez à quelle vitesse en moyenne vous avez<br/>parcouru cet itinéraire en rentrant combien<br/>de temps vous avez mis </p>
                    <div class="vitesse-moyenne-formcontainer">
                        <div class="vitesse-moyenne-inputcontainer">
                            <input type="text" name="vitesse-moyenne" id="vitesse-moyenne-input-h" class="vitesse-input" placeholder="h"/>
                            <input type="text" name="vitesse-moyenne" id="vitesse-moyenne-input-m" class="vitesse-input" placeholder="m"/>
                            <input type="text" name="vitesse-moyenne" id="vitesse-moyenne-input-s" class="vitesse-input" placeholder="s"/>
                        </div>
                        <button type="submit" id="vitesse-moyenne-submit" class="menuGauche-btn-submit vitesse-moyenne-submit"><img src="{{ asset('images/fleche-tempsnecessaire.png') }}"></button>
                    </div>
                </div>
            </div>
            <div class="menuGauche-partie" id="vitesse-moyenne-resultat-container">
                <div class="sepa-container"><div class="menuGauche-sepa"></div></div>
                <div class="vitesse-moyenne-resultat-container">
                    <p id="vitesse-moyenne-resultat">
                        Vous avez parcouru ce parcours avec <br/>une vitesse moyenne de
                        <span id="vitesse-moyenne-resultat-vitesse"></span>
                        km/h
                    </p>
                    <button id="vitesse-moyenne-resultat-btn">Calculer à nouveau</button>
                </div>
            </div>



            <div class="menuGauche-partie">
                <div class="sepa-container"><div class="menuGauche-sepa"></div></div>
                <div class="menuGauche-partie-container">
                    <img src="{{ asset('images/velo.png') }}" alt="Icône vélo" class="menuGauche-img">
                    <p class="menuGauche-partie-temps-sport"><span title="Avec une vitesse moyenne de 20 km/h">En vélo,</span> vous prendrez <span id="tempsVelo"></span></p>
                </div>
            </div>

            <div class="menuGauche-partie">
                <div class="sepa-container"><div class="menuGauche-sepa"></div></div>
                <div class="menuGauche-partie-container">
                    <img src="{{ asset('images/footing.png') }}" alt="Icône footing" class="menuGauche-img">
                    <p class="menuGauche-partie-temps-sport"><span title="Avec une vitesse moyenne de 13 km/h">Avec une allure de footing,</span> vous prendrez <span id="tempsFooting"></span></p>
                </div>
            </div>

            <div class="menuGauche-partie">
                <div class="sepa-container"><div class="menuGauche-sepa"></div></div>
                <div class="menuGauche-partie-container">
                    <img src="{{ asset('images/marche.png') }}" alt="Icône marche" class="menuGauche-img">
                    <p class="menuGauche-partie-temps-sport"><span title="Avec une vitesse moyenne de 6 km/h">En marchant,</span> vous prendrez <span id="tempsMarche"></span></p>
                </div>
            </div>
        </div>

        <!--<button id="boutonMenuLateralFermer" class="boutonMenuLateralStyle"><img src="img/menu-gauche.png" alt="Gauche"></button>-->
    </div>
    <table>
        <thead>
        <tr>
            <th>Titre</th>
            <th>Type de sport</th>
            <th>Description</th>
            <th>Image</th>
            <th>Note</th>
            <th>Autre filtre</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>{{ path.titre }}</td>
            <td>{{ path.typeSport }}</td>
            <td>{{ path.description }}</td>
            <td>{{ path.image }}</td>
            <td>{{ path.note }}</td>
            <td>{{ path.autreFiltre }}</td>
        </tr>
        </tbody>
    </table>
{% endblock %}

{% block javascripts %}
    {#<script src=" {{ asset('build/js/main.js') }} "></script>#}
    <script src=" {{ asset('build/mousetrap.js') }} "></script>
    <script type="text/javascript" src="http://code.jquery.com/jquery-latest.js"></script>
    <script language="javascript" type="text/javascript">
        $(window).load(function() {
            $('#loading').hide();
        });
    </script>

    <script>
        var globalPoly;

        var map;
        var geoPos;

        var markerStart = "{{ asset('images/marker.png') }}";   //icone de marqueur de début
        var markerEnd = "{{ asset('images/empty.png') }}";

        var vitesseVelo = 20;
        var vitesseFooting = 13;
        var vitesseMarche = 6;




        function initMap() {
            var mapDiv = document.getElementById("map");
            //je récupére mon element avec l'id map
            var windowHeight = window.innerHeight;
            //je prend la hauteur de la fenêtre
            var tailleVoulu = (windowHeight - 80) + 'px';
            //je calcule pour que ma map fasse hauteur de la fenêtre moins le header
            mapDiv.style.height = tailleVoulu;
            //c'est comme si je fais en CSS: 'height: tailleVoulu;'

            //definir taille du menu gauche
            var menuGauche = document.getElementById('menuGauche');
            menuGauche.style.height = tailleVoulu;

            //on veut centrer la carte sur notre position si la geolocalisation est activée
            /*if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position){   //recupère notre position
                    geoPos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    map.setCenter(geoPos);   //centre la carte

                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });

            } else {
                // Le navigateur ne supporte pas la géolocalisation ou elle a été refusé
                handleLocationError(false, infoWindow, map.getCenter());
            };*/


            var ancienPath ='{{ path.path }}';

            var ancienPathDesencode = new google.maps.geometry.encoding.decodePath(ancienPath);

            map = new google.maps.Map(document.getElementById('map'), {    //recupére la div #map et la transforme en objet map, stocké dans la var map
                zoom: 14  //Définie le zoom par défaut
            });

            globalPoly = new google.maps.Polyline({   //créé déjà la polyline
                path: ancienPathDesencode,
                strokeColor: '#3BA14C',
                strokeOpacity: 1.0,
                strokeWeight: 3
            });
            globalPoly.setMap(map);   //on attache l'objet polyline à notre map

            var premierMarker = ancienPathDesencode[0];
            firstMarker = new google.maps.Marker({
                position: premierMarker,
                title: 'Premier marqueur',
                map: map,
                icon: markerStart
            });

            var dernierMarker = ancienPathDesencode[ancienPathDesencode.length - 1];
            marker = new google.maps.Marker({
                position: dernierMarker,
                title: 'Dernier marqueur',
                map: map,
                icon: markerEnd
            });

            google.maps.event.addListener( map, 'maptypeid_changed', function(){
                var mapType = map.getMapTypeId();

                if (mapType == 'hybrid'){
                    globalPoly.setOptions({strokeColor: '#FFFFFF'});
                    firstMarker.setOptions({icon: "{{ asset('images/marker_white.png') }}"});
                } else {
                    globalPoly.setOptions({strokeColor: '#3BA14C'});
                    firstMarker.setOptions({icon: "{{ asset('images/marker.png') }}"});
                }
            });

            var boutonMenuLateral = document.getElementById('boutonMenuLateral');
            map.controls[google.maps.ControlPosition.LEFT].push(boutonMenuLateral);

            updateRouteLength();

            var monPath = globalPoly.getPath();

            var pathArray = monPath.getArray();

            zoomToObject(pathArray);
        }
        /************* FIN INITMAP *************/




        function zoomToObject(pathArray){
            var bounds = new google.maps.LatLngBounds();
            var points = pathArray;
            for (var n = 0; n < points.length ; n++){
                bounds.extend(points[n]);
            }
            map.fitBounds(bounds);
        }

        function updateRouteLength(){
            var monPath = globalPoly.getPath();

            var pathArray = monPath.getArray();

            var distance = google.maps.geometry.spherical.computeLength(pathArray);   //calcule la distance du parcours en comptant tout les points
            distanceArrondie = Math.round(distance);    //arrondi la distance à l'unité près
            distanceKmFloat = distanceArrondie/1000;
            distanceKm = Math.round(distanceKmFloat*10)/10;


            var div = document.getElementById("textDiv");    //recupere la div textDiv
            var petiteDiv = document.getElementById("petitTextDiv");
            if ((distanceArrondie == undefined) || (distanceArrondie == 0)){   //si aucun parcours n'est présent ou s'il n'y a qu'un marqueur
                div.textContent = "Il n'y a qu'un seul marqueur";
            } else {
                div.textContent = distanceKm + " kilomètres" ;
                //on affiche la distance arrondie et au km dans la div textDiv
                petiteDiv.textContent = distanceArrondie + " mètres"

                var menuGaucheInterieur = document.getElementById("menuGauche-interieur");
                menuGaucheInterieur.style.display = "block";

                var menuGaucheMessage = document.getElementById("menuGauche-message");
                menuGaucheMessage.style.display = "none";
            }

            updateTempsGlobal(distanceKmFloat);
        }

        function getDecimal(n) {
            return (n - Math.floor(n));
        }

        function getPartieDecimale(n){
            return (Math.round((Math.round(100 * getDecimal(n))/100) * 100 * 60 / 100));
        }

        function updateTempsGlobal(distanceKmFloat){
            //velo
            updateTempsNecessaire(distanceKmFloat, vitesseVelo, "tempsVelo");

            //footing
            updateTempsNecessaire(distanceKmFloat, vitesseFooting, "tempsFooting");

            //marche
            updateTempsNecessaire(distanceKmFloat, vitesseMarche, "tempsMarche");
        }

        function updateTempsNecessaire(distanceKmFloat, vitesseMoyenne, sport){
            var tempsHTML = document.getElementById(sport); //on récup l'élément p tempsVelo

            var temps = distanceKmFloat / vitesseMoyenne; // t = d / v      on sort le temps qu'il faut en heures (mais on a 1.5 heures au lieu de 1h30)
            var tempsEnMinutesAvecSecondes = Math.round(100 * (temps * 60))/100;  //on sort 52.31 (52 minutes 31 secondes)
            var secondesTemps = getPartieDecimale(tempsEnMinutesAvecSecondes);

            var tempsEnMinutes = Math.round(tempsEnMinutesAvecSecondes);   //on sort juste 52

            if(tempsEnMinutes === 1){
                var minuteOrthographe = " minute";
            }else{
                var minuteOrthographe = " minutes";
            }

            if(secondesTemps === 1){
                var secondeOrthographe = " seconde";
            }else{
                var secondeOrthographe = " secondes";
            }


            if(tempsEnMinutes < 1){
                tempsHTML.textContent = secondesTemps + secondeOrthographe;
                tempsHTML.title = "";
            }else{
                //si il y a plus de 60 minutes on affiche en heures et minutes
                if(tempsEnMinutes < 60){
                    tempsHTML.textContent = tempsEnMinutes + minuteOrthographe;
                    tempsHTML.title = "Et " + secondesTemps + secondeOrthographe;
                }else{
                    var tempsEnHeuresFloat = tempsEnMinutes / 60;
                    var minutesDuTempsPourHeures = getPartieDecimale(tempsEnHeuresFloat); //on recup les minutes
                    var tempsEnHeures = Math.round(tempsEnHeuresFloat);

                    if(minutesDuTempsPourHeures === 1){
                        var minuteOrthographe = " minute";
                    }else{
                        var minuteOrthographe = " minutes";
                    }

                    if(tempsEnHeures === 1){
                        var heureOrthographe = " heure";
                    }else{
                        var heureOrthographe = " heures";
                    }

                    tempsHTML.textContent = tempsEnHeures + heureOrthographe + " et " + minutesDuTempsPourHeures + minuteOrthographe;  //on affiche
                }
            }

        }

        var menuGaucheBouton = document.getElementById('boutonMenuLateral');
        var menuGauche = document.getElementById('menuGauche');
        var mapFilter = document.getElementById('mapFilter');

        menuGaucheBouton.onclick = function() {
            menuGauche.style.display = "block";
            mapFilter.style.display = "block";
        };

        mapFilter.onclick = function() {
            menuGauche.style.display = "none";
            mapFilter.style.display = "none";
        };




        /****** MENU GAUCHE ******/
        var menuGaucheBouton = document.getElementById('boutonMenuLateral');
        var menuGauche = document.getElementById('menuGauche');
        var mapFilter = document.getElementById('mapFilter');

        menuGaucheBouton.onclick = function() {
            menuGauche.style.display = "block";
            mapFilter.style.display = "block";
        };

        $('#temps-necessaire-submit').click(function() {
            var inputTempsNecessaire = document.getElementById('temps-necessaire-input');
            var vitesseInput = inputTempsNecessaire.value;

            if(vitesseInput != '' && isNaN(vitesseInput) == false && vitesseInput <= 300){
                var tempsNecessaireDiv = document.getElementById('temps-necessaire-container');
                tempsNecessaireDiv.style.display = "none";
                var tempsNecessaireResultatDiv = document.getElementById('temps-necessaire-resultat-partie');
                tempsNecessaireResultatDiv.style.display = "block";

                var temps = distanceKmFloat / vitesseInput; // t = d / v      on sort le temps qu'il faut en heures (mais on a 1.5 heures au lieu de 1h30)
                var tempsEnMinutesAvecSecondes = Math.round(100 * (temps * 60))/100;
                var secondesTemps = getPartieDecimale(tempsEnMinutesAvecSecondes);
                var tempsEnMinutes = Math.round(tempsEnMinutesAvecSecondes);   //on sort juste 52

                var tempsNecessaireResultatAllureSpan = document.getElementById('temps-necessaire-resultat-allure');
                tempsNecessaireResultatAllureSpan.textContent = vitesseInput;
                var tempsNecessaireResultatSpan = document.getElementById('temps-necessaire-resultat-temps');

                if(tempsEnMinutes === 1){
                    var minuteOrthographe = " minute";
                }else{
                    var minuteOrthographe = " minutes";
                }

                if(secondesTemps === 1){
                    var secondeOrthographe = " seconde";
                }else{
                    var secondeOrthographe = " secondes";
                }


                if(tempsEnMinutes < 1){
                    tempsNecessaireResultatSpan.textContent = secondesTemps + secondeOrthographe;
                    tempsNecessaireResultatSpan.title = "";
                }else{
                    //si il y a plus de 60 minutes on affiche en heures et minutes
                    if(tempsEnMinutes < 60){
                        tempsNecessaireResultatSpan.textContent = tempsEnMinutes + minuteOrthographe;
                        tempsNecessaireResultatSpan.title = "Et " + secondesTemps + secondeOrthographe;
                    }else{
                        var tempsEnHeuresFloat = tempsEnMinutes / 60;
                        var minutesDuTempsPourHeures = getPartieDecimale(tempsEnHeuresFloat); //on recup les minutes
                        var tempsEnHeures = Math.round(tempsEnHeuresFloat);

                        if(minutesDuTempsPourHeures === 1){
                            var minuteOrthographe = " minute";
                        }else{
                            var minuteOrthographe = " minutes";
                        }

                        if(tempsEnHeures === 1){
                            var heureOrthographe = " heure";
                        }else{
                            var heureOrthographe = " heures";
                        }

                        tempsNecessaireResultatSpan.textContent = tempsEnHeures + heureOrthographe + " et " + minutesDuTempsPourHeures + minuteOrthographe;  //on affiche
                    }
                }
            }else{
                alert("Vous n'avez soit rien rentré, soit rentré quelque chose d'autre qu'un nombre, soit un nombre supérieur à 300");
            }
        });

        $('#temps-necessaire-resultat-btn').click(function() {
            displayDefaultInterfaceTempsNecessaire();
        });

        function displayDefaultInterfaceTempsNecessaire(){
            var tempsNecessaireDiv = document.getElementById('temps-necessaire-container');
            tempsNecessaireDiv.style.display = "block";
            var tempsNecessaireResultatDiv = document.getElementById('temps-necessaire-resultat-partie');
            tempsNecessaireResultatDiv.style.display = "none";
            var inputTempsNecessaire = document.getElementById('temps-necessaire-input');
            inputTempsNecessaire.value = "";
        }




        /****** tpvm = Temps pour vitesse moyenne ******/

        $('#vitesse-moyenne-submit').click(function() {
            var tpvmHInput = document.getElementById("vitesse-moyenne-input-h");
            var tpvmMInput = document.getElementById("vitesse-moyenne-input-m");
            var tpvmSInput = document.getElementById("vitesse-moyenne-input-s");

            var tpvmH = tpvmHInput.value;
            var tpvmM = tpvmMInput.value;
            var tpvmS = tpvmSInput.value;

            if(tpvmH + tpvmM + tpvmS != '' && tpvmH + tpvmM + tpvmS != '0' && tpvmH + tpvmM + tpvmS != '00' && tpvmH + tpvmM + tpvmS != '000'){
                if(tpvmH <= 99){
                    if(tpvmM <= 59){
                        if(tpvmS <= 59){
                            var tpvmHInt;
                            var tpvmMInt;
                            var tpvmSInt;

                            if(tpvmH != ''){
                                tpvmHInt = parseInt(tpvmH, 10);
                            }else{
                                tpvmHInt = 0;
                            }
                            if(tpvmM != ''){
                                tpvmMInt = parseInt(tpvmM, 10);
                            }else{
                                tpvmMInt = 0;
                            }
                            if(tpvmS != ''){
                                tpvmSInt = parseInt(tpvmS, 10);
                            }else{
                                tpvmSInt = 0;
                            }

                            tpvmMInt = tpvmMInt * 100 / 60;
                            tpvmSInt = tpvmSInt * 100 / 60; /* On passe en base 100 */

                            tpvmMInt = tpvmMInt * 0.01;
                            tpvmSInt = tpvmSInt * 0.0001;

                            var tpvm = tpvmHInt + tpvmMInt + tpvmSInt;

                            var vitesseMoyenne = distanceKmFloat / tpvm; //d/t
                            var vitesseMoyenne = Math.round(100 * vitesseMoyenne) / 100;

                            var vitesseMoyenneResultatSpan = document.getElementById('vitesse-moyenne-resultat-vitesse');
                            vitesseMoyenneResultatSpan.textContent = vitesseMoyenne;
                        }else{
                            alert('Vous avez rentré une valeur supérieure à 59 dans le champ secondes');
                        }
                    }else{
                        alert('Vous avez rentré une valeur supérieure à 59 dans le champ minutes');
                    }
                }else{
                    alert('Vous avez rentré une valeur trop haute dans le champ heures');
                }
            }else{
                alert("Vous n'avez rien rentré");
            }

            var vitesseMoyenneContainer = document.getElementById("vitesse-moyenne-container");
            vitesseMoyenneContainer.style.display = "none";
            var vitesseMoyenneResultatContainer = document.getElementById("vitesse-moyenne-resultat-container");
            vitesseMoyenneResultatContainer.style.display = "block";
        });

        $('#vitesse-moyenne-resultat-btn').click(function() {
            displayDefaultInterfaceVitesseMoyenne();
        });

        function displayDefaultInterfaceVitesseMoyenne(){
            var vitesseMoyenneContainer = document.getElementById("vitesse-moyenne-container");
            vitesseMoyenneContainer.style.display = "block";
            var vitesseMoyenneResultatContainer = document.getElementById("vitesse-moyenne-resultat-container");
            vitesseMoyenneResultatContainer.style.display = "none";
            document.getElementById("vitesse-moyenne-input-h").value = "";
            document.getElementById("vitesse-moyenne-input-m").value = "";
            document.getElementById("vitesse-moyenne-input-s").value = "";
        }
        /****** FIN MENU GAUCHE ******/





        /***** RACCOURCIS CLAVIER ********/
        Mousetrap.bind(['ctrl+z'], function() {
            deleteLastPoint();
        });




        //zoom/dezoom avec Ctrl Alt +/- ou Ctrl +/-
        var zoom = 14;

        Mousetrap.bind(['ctrl+alt++', 'ctrl++'], function() {
            if(zoom <= 23){
                zoom++;
                map.setZoom(zoom);
            }else{
                alert('Impossible de zoomer davantage');
            }
        });

        Mousetrap.bind(['ctrl+alt+-', 'ctrl+-'], function() {
            if(zoom >= 1){
                zoom--;
                map.setZoom(zoom);
            }else{
                alert('Impossible de dézoomer davantage');
            }
        });
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBxvWmkG3pYY6DaFxUzvRiyvttqYjdX15Q&libraries=geometry&callback=initMap">
    </script>
{% endblock %}